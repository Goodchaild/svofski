			" Б А Й Т - 1 7 "

		           Киров, 1993
                  информационно-рекламный выпуск
			  центра "БАЙТ"
                 для пользователей ПК "Вектор-06Ц"

 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 +  Наш адрес: г. Киров, Октябрьский пр-т, 118, м-н "Дом Радио" + 
 +   Адрес для писем" 610006, г.Киров, а/я 1248, Зубкову А.Н.   +
 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	   Новая аппаратная разработка для "Вектора"!

	П Р О Г Р А М М И Р У Е М Ы Й   Г Е Н Е Р А Т О Р
  (М У З Ы К А Л Ь Н Ы Й  С Т Е Р Е О - С О П Р О Ц Е С С О Р)
	     Д Л Я  Б П Э В М  "В Е К Т О Р - 0 6 Ц"
        		А У - 3 - 8 9 1 0

Применение: БПЭВМ "Вектор-06Ц" (адаптация музыки с "ZX-SPECTRUM 128 кбт")

		(с) Design By Саттаров В.

Технические характеристики:

3 независимых музыкальных канала (стерео музыка) + генератор "белого шума"
2 (или 1) параллельных порта ввода/вывода
16 градаций амплитуды 
16 форм волного пакета
Основная частота - 1.7734 Мгц
Диапазон воспроизводимых частот: от 27 Гц до 11 Кгц
Частоты волнового пакета: от 0.1 Гц до 6 Кгц
Частота генератора шума: от 3 Кгц до 110 Кгц

	Программирование ПГЗ АУ-3-8910
	------------------------------

 ПГЗ является регистро-ориентированным генератором звуков. Его функции
выполняются посредством 16 внутренних регистров. Номер регистра задает-
ся 4 младшими разрядами при подаче команды "фиксация адреса" и остается
действительным до получения команды о смене этого адреса.
 В таблице приведены функции регистров и допустимые значения для этих
регистров.
+----------------------------------------------------------------------+
: N регистра : назначение или содержимое                    : значение :
+----------------------------------------------------------------------+
: 0, 2, 4    : нижние 8 бит частоты голосов A, B, C         : 0 - 255  :
+----------------------------------------------------------------------+
: 1, 3, 5    : верхние 4 бита частоты голосов A, B, C       : 0 - 15   :
+----------------------------------------------------------------------+
: 6          : управление частотой генератора шума          : 0 - 31   :
+----------------------------------------------------------------------+
: 8, 9, 10   : управление амплитудой каналов A, B, C        : 0 - 15   :
+----------------------------------------------------------------------+
: 11         : нижние 8 бит управления периодом пакета      : 0 - 255  :
+----------------------------------------------------------------------+
: 12         : верхние 8 бит управления периодом пакета     : 0 - 255  :
+----------------------------------------------------------------------+
: 13         : выбор формы волнового пакета                 : 0 - 15   :
+----------------------------------------------------------------------+
: 14, 15     : регистры портов ввода/вывода                 : 0 - 255  :
+----------------------------------------------------------------------+

 Основным при работе ПГЗ является регистр 7. Его главное назначения - оп-
ределять, какие каналы должны участвовать в образовании  звука и  опреде-
лять направление обмена портов ввода/вывода.
 Его структура показана на рис.1. Ноль соответствует включению определен-
ной позиции, а единица - выключению.
+---------------------------------------------------------------+
:   7   :   6   :   5   :   4   :   3   :   2   :   1   :   0   :
+---------------------------------------------------------------+
:порт B : порт A: шум С : шум В : шум А : тон С : тон В : тон А :
+---------------------------------------------------------------+
:упр.ввод/вывод :выбор канала для шума  : выбор канала для тона :
+---------------------------------------------------------------+
Для портов "1" соответствует режиму вывода информации.

	Рис.1. Регистр смешивания и выбора канала.
	------------------------------------------

OUT 15H - задает номер регистра
OUT 14H - задает значение этого регистра

Частота генератора = 1625000/(16*((256*R1)+R0))
Частота шума       = 1625000/(16*R6)

Амплитуда: R0, R9, R10: бит 0-3 - эффективное значение
			бит 4   - модуляция (1- активно)
Период волнового пакета P=1625000/(256*((256*R12)+R11)

 Состояние регистра R13 определяет форму звучания сигнала. Его
значения показаны в таблице. Бит 3 этого  регистра  определяет
включен эффект или нет. (0 соответствует выключению эффекта).
+---------------------------------------------------------------+
: Уровень звучания : Значение                                   :
+---------------------------------------------------------------+
:       0          : одно снижение, затем выключение            :
:       1          : одно нарастание, затем выключение          :
:       2          : одно снижение, затем поддержка             :
:       3          : одно нарастание, затем поддержка           :
:       4          : повторящееся снижение                      :
:       5          : повторящееся нарастание		        :
:       6          : повторяющееся нарастание-снижение          :
:       7          : повторяющееся снижение-нарастание          :
+---------------------------------------------------------------+

 Внимание! В настоящее время заканчивается работа над музыкальным
редактором,  поддерживающим  стерео-процессор  AY-3-8910, который 
позволяет писать музыку даже непрофессионалам (расставляя ноты на
нотном листе), редактор полностью использует все возможности сте-
рео-процессора. Конечным итогом работы редактора является исполня-
емый модуль в формат ROM, который можно вставить в любую програм-
му. Также ведется разработка нескольких музыкальных DEMO-версий.

                   СЖАТИЕ ДАННЫХ МЕТОДОМ ХАФФМАНА

      (печатается по статье "Как работает упаковщик", из журнала
                  "Компьютер-пресс",6 за 1991 год.)

 Алгоритм Хаффмана (Huffman Enkoding),  или  кодирование символами
переменной длины, предлагает отказаться от обычного  представления
файлов в виде последовательностей 8-ми  битовых символов.  Главный
недостаток такого способа записи файлов состоит  в том, что  в нем
не делается различий между кодированием символов, с разной  часто-
той втречающихся в файлах. Так, наиболее частые в  английском язы-
ке E или I, имеют ту же длину,что и относительно редкие Z,X или Q.
Код переменной длины позволяет записывать наиболее часто  встреча-
ющиеся символы всего лишь несколькими битами, в то время, как ред-
кие символы и фразы будут записаны  более длинными  битовыми стро-
ками. Простейший способ кодирования информации символами  перемен-
ной длины, осуществляется при помощи таблицы соответствий  (trans-
lation table). Например, анализируя любой английский текст , можно
установить, что буква E  встречается  гораздо чаще, чем Z, а X и Q 
относятся к наименее часто встречающимся. Таким образом, используя
таблицы соответствий,мы можем закодировать каждую букву  E меньшим
числом бит, используя более длинный код для более редких символов.
Хотя  такой  прием  пригоден для текстов любого типа , большинство 
практических программ вычисляют свою таблицу соответствий для каж-
дого нового документа. Таким образом исключаются случайные  откло-
нения каждого текста от среднестатистического и  устраняются  свя-
занные с этим потери эффективности сжатия.
 Попробуем описать алгоритм кодирования Хаффмана на наглядном при-
мере. В качестве кодируемого текста возьмем предложение: This is a
simple example of Huffman encoding.
 Первая задача состоит в подсчете числа  повторений  каждой  буквы
алфавита в исходном тексте (рис.2).  Далее  мы  должны  удалить из
списка те буквы, которые ни разу не встретились в нашем  тексте  и
построить дерево кодирования (снизу вверх). Лучше всего  предвари-
тельно отсортировать получившийся список в порядке убывания часто-
ты повторений символов. Построение дерева мы начнем от самого ниж-
него символа в списке. Частоты двух наиболее  редко  встречающихся
символов просуммируем и результат запишем в узле дерева, как пока-
зано на рис.3. Исходные частоты стали теперь детьми  новой суммар-
ной частоты. Если имеется более двух символов с минимальной часто-
той повторений, то нужно образовывать из них самостоятельные пары.
Если имеется нечетное число  наименьших  значений  частоты - будем
обьединять  непарную  частоту  со  следующей  наименьшей  частотой
(рис.3). По мере продолжения процесса построения  дети  становятся
внуками, правнуками и так до тех пор, пока все дерево не будет за-
кончено. Полное количество символов исходного текста  будет предс-
тавлено в вершине полученного дерева. Таким образом  можно осущес-
твлять эффективную проверку правильности  построения  дерева коди-
рования (рис.4).
 Необходимо сказать, что та структура дерева,  которую  мы создали
является  оптимальной с точки  зрения  минимизации  кодирования.То
есть с помощью таблицы кодирования (или  префиксного  кода), полу-
ченной на  основе  анализа структуры дерева, можно наиболее эффек-
тивно считать  исходный  текст. (Это можно доказать математически,
но  мы  здесь  ограничимся  лишь  констатацией). Окончательный код
Хаффмана для каждого символа исходного текста можно  получить, до-
бавив к каждой ветви дерева определнный двоичный  атрибут. Все ле-
вые ветви, исходящие из всех узлов, мы можем  помечать  "1", а все
правые ветви - "0". Таким образом код каждой буквы мы сможем полу-
чить, перемещаясь по ветвям дерева от  вершины  к интересующей нас
букве и записывая по порядку двоичные атрибуты ветвей.
 Результаты сведем в таблицу, которую будем использовать в  качес-
тве  "словаря" при кодировании и  декодировании.  Например , слово
this теперь будет кодироваться последовательностью    000010  0110
1100  0111. Общая длина кода уменьшилась при этом  с 32 бит  до 17
бит. Для всего предложения коэффициент сжатия составляет  175/352,
что дает 0.497.
 При разработке реальных программ сжатия данных составление слова-
ря кодирования оказывается несколько более сложным, чем  это может
показаться из приведенной здесь диаграммы. Кроме того, при кодиро-
вании и декодировании информации возникают  проблемы , связанные с
переменной длиной получаемого кода. Для решения этих задач исполь-
зуется  специальные технические приемы, которые, однако , не пред-
ставляют самостоятельного интереса, поскольку не влияют  на эффек-
тивность сжатия.
 На основе данного алгоритма работают архиваторы для "Вектора" -
Архив-1.2 и Архив-1.3, которые Вы можете заказать в нашем центре.


      This is a simple example of Huffman enkoding.
  
   Рис.1  Исходный текст  для кодирования.

    Символ.Пробел A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
   ------------------------------------------------------------------
    Част.  7      3 0 1 1 4 3 1 2 4 0 0 2 3 3 2 2 0 0 3 1 1 0 0 1 0 0
   
   Рис.2.Таблица частот каждого символа.

    Пробел 7            Рис.3.Символы с наименьшими частотами
    E      4                  группируются в пары и суммиру-
    I      4                  ются.
    A      3
    F      3
    M      3           Пробел 7-1----15-1--27--
    N      3                E 4-1-8-0/     /   \
    S      3                I 4-0/        /     \
    H      2                A 3-1-6-1-12-0       \
    L      2                F 3-0/    /           \
    O      2                M 3-1-6-0/             \
    P      2-----4          N 3-0/                  \
    C      1--2 /           S 3-1-5-1-9-1-------17-0-44
    D      1-/              H 2-0/    /       /-/
    G      1--2--4          L 2-1-4-0/       /
    T      1-/  /           O 2-0/          0
    U      1--2/            P 2-1-----4\   /
    X      1-/              C 1-1-2-0/  1-8
                            D 1-0/       /
                            G 1-1-2-1\  0
                            T 1-0/    4/
                            U 1-1-2-0/
                            X 1-0/
   
  
   Рис.4.Когда дерево частот построено
         число в вершине равно количеству символов в исх.тексте.
   
   Получается таблица кодирования:
   
   Пробел 1 1 1        L 0 1 0 1
   E      1 1 0 1      O 0 1 0 0
   I      1 1 0 0      P 0 0 1 1
   A      1 0 1 1      C 0 0 1 0 1
   F      1 0 1 0      D 0 0 1 0 0 
   M      1 0 0 1      G 0 0 0 1 1 
   N      1 0 0 0      T 0 0 0 1 0
   S      0 1 1 1      U 0 0 0 0 1
   H      0 1 1 0      X 0 0 0 0 0
   
   Рис.5.Код Хаффмана, используемый для кодирования и декодирования
         исходного пакета.


                 "BOLD/1 and BOLD/2"

   Если Вы записали  игру "BOLD/1" или "BOLD/2",но  не знаете  как 
играть, вот ее инструкция:
   Управляя человечком и собирая алмазы, нужно  пройти  уровни. Во
время игры вам будут мешать бабочки и квадраты. При столкновении с
ними вы теряете жизнь.

   Вот основные элементы этажа:

   1). Затушованная стенка - человечек может пройти  через  нее, а
квадрат и бабочка нет. Там где человечек прошел, стенка  исчезает.

   2). Камни - человечек может двигать один камень нажатием клавиш
"<-" и "->". Если человечек стоит под падающим камнем, то он поги-
бает, как и все другие недруги.

   3). Алмазы - с помощь их человечек набирает очки, за каждый ал-
маз   дается столько очков, сколько указано в  левом верхнем  углу
экрана. В зависимости от этажа и уровня сложности разная  ценность
у алмазов. Так же при взятии  нужного  количества  алмазов (указы-
вается в левом верхем  углу)  открывается  выход  для  перехода на
следующий уровень.
 Если человечек стоит под падающим  камнем, то он  погибает, как и
все другие недруги.

  4). Кирпичная стенка - непроходима для человека. Но если  камень
упадет на квадрат или бабочку,  находяшуюся   около  стенки, то он
"взрывается", после чего часть стены рядом с ним пропадает.

   5). Мигаюшая стенка - прходя через нее, камни превращаются в ал-
мазы, а алмазы - в камни.

  6). Разратающаяся жидкость-через некоторое время,если она огоро-
жена со всех сторон (камнями,алмазами,другими стенками(кроме зату-
шованной стенки)),она превращается в алмазы,если она не огорожена-
в камни. При столкновении бабочки с жидкостью бабочка превращается
в алмазы, а при столкновении квадрата происходит "взрыв".

  7). Выход на следующий уровень (похож на игральный кубик), кото-
рый открывается после взятия нужного количества алмазов.

  Пр попадании камня(алмаза):
а).  в бабочку она превращается в 9 алмазов.
б).  в квадрат  происходит  "взрыв", камни  попавшие  под  "взрыв" 
исчезают.

 P.S. В игре возможен выбор этажа клавишами "<-" и "->".
   Клавишами "вверх" и "вниз" можно установить сложность  уровня с
увеличением сложности меняется  расположение  камней и уменьшается
время,отведенное на прохождение данного уровня. По истечению  вре-
мени теряется одна жизнь.

   Клавиша "УС" - самоуничтожение.
   Клавиша "ВК" - начало игры.
   Клавиша "ТАБ" + стрелка (в нужном направлении)  можно  стоя  на
месте можно взять алмаз или толкнуть камень "вслепую".

                                    Назаров А.Е. г.Киров 1993 г.

                        А знаете ли вы ?
                      ==================

                          "LIBERATOR"                      

 Управляя танком вы должны поразить цели противника, произ-
вести разведку местности и захватить штаб.
В процессе игры вам нужно пополнять запас  горючего и  бое-
припасов. Кл. "АР2"-выводит приборный шит,в котором выдается
сообщения: о повреждениях во время боя, о запасах горючего и
боекомплекте.
Кл. "F1"-вкл/выкл паузы.
Кл. "F3"-замена танка
Кл. "F5"-останов танка (тормоз)

                     "JET SET WILLI-1"
 Вы должны помоч Вилли собрать  все  предметы в  доме, тогда
Мария пустит его себе в постель. Играть в эту игру вам помо-
жет карта.
                Карта игры "JET SET WILLI-1"

                    1        
                    2        
                 3456789
                АБВГДЕЖ 
              ЗИЙКЛНОП
              РСТУФХЦЧ  gh
              ШЩЫЬЭЮЯabcdef
           wvutsr      ijklmn
                       opq

Условные обозначения под каждой буквой стоит название этажа.

1-Нет хода                  Т-Плавател.бассейн n-Нет хода
2-Башенные часы             У-Инд.смоковница   o-Вход в Гадсе
3-Номен луни                Ф-Ком.кошмаров     p-Под дорогой
4-На крыше                  Х-1-ая комната     q-Корень дерева
5-Перепрыги гантель         Ц-Капелька         r-Забытое аббатство
6-Над кольями               Ч-Опоры ванной ст. s-Винный погреб
7-Уверял,что пр.это видел   Ш-Черный ход       t-Мастерская
8-Спаси Эсмиральду          Щ-Забытая лестница u-Берег
9-Вершина дома              Ы-Холодильник      v-Яхта
А-Теплица                   Ь-Запад кухни      w-Нос яхты
Б-Под крышей                Э-Кухня
В-Чердак                    Ю-Главная лестница
Г-Док.Джокс в это не повер. Я-Западная зала 
Д-безымянный                a-Восточная зала
Е-Святилище                 b-Холл
Ж-Аварийный генератор       c-Парадная дверь
З-Около западной спальни    d-В ветвях под дорогой
И-Левое крыло крыши         e-Внутри великого дерева
Й-Оранжерея                 f-Кукушкино гнездо
К-Часть дерева              g-Снаржи в ветвях
Л-Хозяйка спальни           h-Вершина великого дерева
Н-Верхняя комната           i-Надежная охрана 
О-Ванная                    j-Дорога 
П-На пол пути к вост.стене  k-У подножия великого дерева
Р-Западная спальня          l-Под великим деревом
С-Левое крыло               m-Мост



              Игра "Life" ("Жизнь")
              ---------------------
                   Инструкция.

 1. Набор поля

   1). Управление
       маркером: клавиши управления курсором
       окном:    УС + <стрелка вверх> - вверх
                 УС + <стрелка вниз>  - вниз
                 УС + <-              - влево
                 УС + ->              - вправо
       дисплеем: СС + <стрелка вверх> - вверх
                 СС + <стрелка вниз>  - вниз
                 СС + <-              - влево
                 СС + ->              - вправо

   2). Установка точек
       стрелка влево-вверх - зажечь точку
       СТР                 - погасить точку

   3). Память
       Писать в память  - [П]
       Читать из памяти - [Ч]
       P.S. При отсутствии надпись: "Нет данных"
       Писать на МЛ - [УС]+[П]
       Читать с  МЛ - [УС]+[Ч]
       P.S. При записи или чтении вводится имя 1-8 букв.  Исправле-
            ния - [ЗБ], конец - [BK].
       При чтении нажатие клавиши СС или ошибка при чтении вызывают
       надпись "ОШИБКА" и выход в режим построения. При  считывании
       программы, записанной в форматах ROM, BAS, MON и др.,выдает-
       ся надпись "НЕ LIFE ФАЙЛ" и переход в режим построения.

   4). Дополнения
        [C]   - вкл/выкл сетку
     [УС]+[T] - стереть игровое поле
        [Т]   - стереть окно
        [Х]   - показать номер хода
        [Ф]   - показать имя файла

   5). Начало игры
       <пробел> - с окном
        УС+СТР  - без окна
        СС+СТР  - в окне

 2. Макросы

   1). Информация
      Макрос - это набор команд в памяти ЭВМ. Его можно вызвать на-
      жатием одной или более клавиш. Есть два типа макросов:
            Готовые        - 1
            Макросы игрока - 2
                 Готовые макросы
        0 - блок              8 - средний
        1 - бадья             9 - тяжелый
        2 - улей              A - ружье
        3 - пруд              В - пожиратель
        4 - лодка             С - паровоз
        5 - корабль           D - мигалка
        6 - планер            Е - светофор
        7 - легкий            F - тумблер
       Все названия из книги М. Гарднера (см. раздел литература).
                    Макросы игрока
     За клавишей F3 и до АР2 в памяти ЭВМ запоминаются нажатые  иг-
     роком клавиши.

   2). Вызов макроса
       Макрос игрока (простой):  F4+[П]     - вызов макроса игрока
       Макрос игрока (сложный):  F5+[П]     - зеркальный вызов  ма-
                                              кроса игрока
       Готовый макрос (простой): F1+[П]+[H] - вызов  готового  мак-
                                              роса
       Готовый макрос (сложный): F2+[П]+[H] - зеркальный вызов  го-
                                              тового макроса
       P.S. Сразу после вызова  макроса  его можно убрать  нажатием
            клавиши ЗБ.
       [П] - поворот (в градусах): <стрелка вниз>   - 0
                                   <стрелка вправо> - 90
                                   <стрелка вниз>   - 180
                                   <стрелка влево>  - 270
       [H] - номер макроса (см. список макросов).

   3). Запись макроса игрока \  смотри
   4). Список макросов       /  Информация

 3. Остановка игры

    Игра Life, переход в режим набора поля - УС или СС.

 4. Дополнения
   1). Автор игры - Джон Хортон Конуэй (Америка), Октябрь 1970 г.
                    John Horton Conway (Scientific American),
                    October, 1970               
   2). Copyright
       (C) 1990
       (C) Филиппов Е. В., г. Кишинев, т. 52-80-27
   3). Литература
       М. Гарднер "Крестики-нолики", М:Мир, 1988

     P.S. 1. В режиме "Инструкция" клавиша F4 - выход в режим пост-
             роения.
          2. В режиме построения: надпись "Х:073 Y:127" - координа-
             ты курсора (0<=Х или Y<=255).
          3. При перезапуске (СБР и БЛК) очистки игровог о поля  не
             происходит, но  при  нажатии  УС+СБР и БЛК  происходит
             очистка игрового поля.

                                                    ТМК Soft - 1992
  