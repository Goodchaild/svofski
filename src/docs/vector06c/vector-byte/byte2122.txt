                     " Б А Й Т - 2 1, 2 2 "

                           Киров, 1994
                 информационно-рекламный выпуск
                          центра "БАЙТ"
                для пользователей ПК "Вектор-06Ц"

 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 +  Наш адрес: г. Киров, Октябрьский пр-т, 118, м-н "Дом Радио" +
 +   Адрес для писем" 610006, г.Киров, а/я 1248, Зубкову А.Н.   +
 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                  НЕСКОЛЬКО СЛОВ О БЕССМЕРТИИ.

 Эта статья  рассказывает  о  способах  установления  бессмертия в
играх. Следует отметить, что описанные здесь способы наиболее час-
то встречаются  в играх до 91  г.,а за 92-93  - достаточно  редко,
т.к. программисты стараются как можно лучше защитить свои програм-
мы от несанкционированного доступа. Для успешной работы вам следу-
ет иметь как минимум один вид  Монитора, который загружается сразу
по своим  рабочим адресам.  Нужно загрузить обычный  Монитор-отл.,
после нажатия  на клавиши  БЛК+СБР,  выбрать область  расположения
"1", а затем  записать на пленку  три  составные  части Монитора :
О>0,1,0 ; О>94,0С,0 ; О>Е0,20,0. Загружать такой Монитор нужно че-
рез клавиши УС+ВВОД+БЛК,  а после загрузки  трех  частей нажать на
клавиши БЛК+СБР.  Следует так же отметить,  что Монитор лучше под-
загружать  в игры, что позволит вам  раскодировать  закодированную
игру или же распаковать ее.Описанный выше тип отладчика хорош тем,
что загружаясь сразу по своим рабочим адресам, он не затирает  со-
бой программу, которая расположена с адреса 100h (1 блок) и  выше.
Но будьте осторожны:  этот способ не подействует, если в игре  не-
льзя нажимать на клавиши БЛК+СБР или если игра загружается с нуле-
вого блока. После  загрузки игры вы, убедившись , что она  переза-
пускается при нажатии на клавиши БЛК+СБР,можете смело подзагружать
в нее Монитор. Сейчас я в общих чертах расскажу, какими  способами
в играх можно делать бессмертие. Например,  известно, что жизней в
игре пять. Теперь следует поискать ячейку с таким содержимым : MVI
A,05 с помощью дерективы Q: Q<нач.адр.>,<кон.адр.>  <ВК> :'MVI A,5
<ВК>  Компьютер  может  выдать как 1-2 адреса,  так и  10-15.  Для
удобства, если выданных адресов больше  5,следует  записать адреса
на  листок  бумаги, чтобы в дальнейшем работать с ними. Если же ни
одного  адреса  не выведется  на экран, то следует поискать другое
значение, например, MVI M,05, а затем работать  уже с этими значе-
ниями. Затем  следует с помощью директивы L<адрес>  просмотреть те
адреса,  которые  вывелись  нам при  поиске описаной  выше ячейки.
Обращать внимание следует только на те адреса,  где после MVI A,05
стоит команда STA<адрес>. То, что стоит после STA следует выписать
на  бумагу. После этого опять же с помощью директивы Q следует по-
искать следущую последовательность : DCR A и STA <адрес>, разделяя
эти команды знаком "!" (более подробную информацию смотрите в опи-
сании Монитора-отладчика). Например, DCR A!STA 1234. Так вы пооче-
редно перебираете  все адреса,  которые  находились  после команды
STA. Если после поиска такой  последовательности вам выдался какой
нибудь  адрес, то скорее именно он и есть то, что вы искали. Тогда
по  этому адресу  вместо команды DCR  A  следует поставить NOP. Но
следует так же обратить  ваше внимание на то, что после такой пос-
ледовательности  должен стоять  переход  JNZ<адрес> или JZ<адрес>.
Если стоит команда JZ<адрес>, то  посмотрев с помощью  директивы D
этот самый адрес, можно увидеть  сообщение "GAME OVER".Если  стоит
команда  JNZ<адрес>,то посмотрев опять  директивой D адрес,который
идет непосредственно после команды перехода,можно так  же  увидеть
то же сообщение. Если  же  после такого поиска вам не выдалось  ни
одного адреса, то нужно поочередно  просматривать все команды "DCR
A" в программе, опять же с помощью команды Q. Но DCR-ов в програм-
ме может быть очень много. В этом случае нужно воспользоваться ди-
рективой М.  С помощью  этой  команды  можно просмотреть графику в
программе.Формат          команды          следующий           : М
<нач.адр.>,<кон.адр.>,А000.Но не следует вводить  слишком  большие
адреса - это может привести к уничтожению  Монитора и  уничтожению
программы. Разность между начальным и конечным  адресами не должна
привышать   2000h   (1  строчка  ).  Например,   "М100,2000,А000";
М4000,6000,А000 и т.д. При  выполнении этой команды экран заполня-
ется графическими символами.Начиная слево направо идет графический
эквивалент тех столбиков или адресов,которые вы ввели.При этом са-
мый левый граф.столбик соответствует адресам 0000h-00FFh, следущий
- адресам 100h-200h и т.д. Следует обратить внимание  на те столб-
цы, где находится  графическая информация. Если в этом же  столбце
находится и один из адресов,которые выдались вам при поиске коман-
ды DCR A, то этот адрес можно сразу отбросить от рассмотрения. Та-
ким образом нужно просмотреть все адреса с этой командой.Нужно за-
мечать те DCR-ы, после которых стоят команды JNZ или JZ.Если и это
не поможет, то есть еще один способ. В  Ассемблере имеется команда
CPI<число>.Она сравнивает два числа (которые находятся в аккумуля-
торе  и непосредственно после команды). Некоторые авторы  программ
делают вот как : сравнивают количество жизней в данный момент с их
конечным количеством.  Если в результате сравнения  получился 0,то
следует конец игры.С помощью команды  Q следует поискать следущее:
CPI 05. После этой команды должен стоять адрес перехода:JNZ<адрес>
или JZ<адрес>.Эта команда используется в  программах в тех  случа-
ях,когда жизни в игре не  вычитаются,а прибавляются (например, как
в игрe EAGLE SNEST прибавляются  ранения). Ниже приводятся игровые
программы,  в которых бессмертие было  установлено с помощью  выше
описанных способов. Во все эти игры был  подзагружен Монитор, опи-
санный в начале статьи.

                           EXOLON.

 Известно, что жизней в игре девять. Поищем ячейку с  таким содер-
жимым: #Q100,8000  <BK> :'MVI A,9 <BK> *2021 *6F38 #_  После прос-
мотра этих  адресов дерективой L, мы видим, что после  команды MVI
A,09 идет STA 2029 (в первом случае) и STA 3EF1 (во втором).Сейчас
следует опять с  помощью  дерективы Q поискать следущее: DCR A!STA
2029 и DCR A!STA  3EF1.В первом случае вам  не выдадется ни одного
адреса, а во втором - один. Этот адрес -  41D6. Именно в это место
взамен команды DCR A нужно поставить NOP.

                          EAGLE SNEST.

 В этой игре ведется счет патронам и ранениям.Вам нужно  нейтрали-
зовать эти две вещи (сделать патроны и ранения бесконечными). Под-
загружаем в игру  Монитор  и ищем  адрес, в котором число патронов
устанавливается в восемь: Q100,6000 <ВК>  :'MVI A,8 <BK> Вам выда-
дуться    следущ.     адреса:    3E5,413,41B,449,509,D4C,E3A,18F3,
1911,1932,1953. После адресов D4C,18F3,1911,1932,1953 стоит коман-
да STА 0D9F, а после адреса Е3А - SТА 0DЕ1. Будем искать следующие
последовательности: DCR A!STA D9F и DCR A!STA DE1. #Q100,6000 <ВК>
:'DCR A!STA D9F <ВК> *13В1 #Q100,6000 <ВК> :'DCR A!STA DE1 <ВК> #_
По этому  адресу  нужно поставить вместо DCR A - NOP. Теперь ране-
ния: их нужно всего девять - и конец игры. Они прибавляются, пото-
му ищем следущее: #Q100,6000 <ВК> :'CPI 09 <ВК> *108А  *10СЕ *4676
#_ После команды по адресу 108А стоит переход -  JZ<адрес>. Дирек-
тивой D смотрим этот самый адрес. Читая правый столбик,  вы видите
сообщение "Игра окончена".Значит это и есть та самая ячейка, кото-
рая нам нужна. Поэтому вместо команды JZ нужно поставить NOP.

                                Навалон А.В., Шилин Д.В., Киров.


                           SHOP TOUR.

 В этой игре вам нужно заработать как  можно больше денег, разъез-
жая по  биржам СНГ . В начале  вы имеете 100 долларов  и машину на
ней вам предстоит зарабатывать себе  на жизнь и обгонять конкурен-
тов,  которые используют любые способы, чтобы навредить вам. Начи-
наете вы свое путешествие из столицы нашей родины - Москвы.  Когда
на  экране вашему вниманию представится карта, вы с помощью указа-
теля можете посмотреть цены на биржах в любом городе страны наведя
указатель  на  любой нужный вам городок. Ваша задача,покупая поде-
шевле товары в одном городе продавать их подороже в другом.  Когда
вы накопите достаточно  много денег, то на биржи вас будут  сопро-
вождать конкуренты . Ни в коем случае не давайте им шанс добраться
до биржи первее  вас,т.к. в случае если они каким-то чудом  сумеют
это сделать , то могут упасть цены как раз  на  тот товар, который
вы везете на  продажу,что  может привести  к убыткам. Если же  это
случилось,то внизу экрана  на факсе вам выдадется  соответствующее
сообщение о том,  что упали цены на такой-то товар. В любом случае
число конкурентов  уменьшится,если ваш  кошелек  потерпит довольно
ощутимые убытки. Машина -  довольно хорошая вещь,  но лишь при том
условии, если ей есть на чем ехать, т.е. бензин. В любом городе вы
можете  купить  последний за 2 доллара.Если же он кончится прямо в
дороге,то  ничего  не поделаешь  - придется  покупать его у  очень
предприимчевых бизнесменов - за  20 долларов (  если у вас имеются
деньги ). Если денег нет, то нужно играть сначала. Покупка товаров
производится  при   нажатии  на   клавиши   УС+"влево".  Продажа -
УС+"вправо"  (вместо клавиши УС можно нажимать на клавиши "СС" или
РУС/LAT).Вот  вы  накупили товаров и едете на другую биржу,  чтобы
продать  их там за более высокую цену.Когда вы едете по дороге, то
если  вы находитесь у города, то справа от проезжей части появится
табличка с названием данного городка. Когда эта табличка дойдет до
края экрана, нужно нажать клавишу "пробел". Тогда вы  окажитесь на
бирже в этом городе,где и можете произвести все нужные вам сделки.
Несколько полезных советов: 1) В начале игры лучше  вести торговлю
только между двумя городами.Когда вы накопите достаточно много де-
нег, на  них можно  купить  бензин, чтобы затем  не беспокоиться о
нем, а только затем расширять свою деятельность. 2) Если вы повер-
нули  не на ту дорогу или  случайно проехали город  то используйте
клавиши  СТР или  "влево-вверх"  -  ваша машина будет развернута в
противоположную  сторону. 3) Если  конкурентов довольно много , то
их довольно сложно обогнать, т.к. они движутся с большой скоростью
и их не заносит на дорогах. В этом случае можно нажать  на клавишу
"СТР" и уменьшить свою скорость, подождать, пока они  вас обгонят,
развернуться еще раз и продолжить путь в нужном направлении.

                              LAND.

 Графика и  звук в этой игре отнюдь не делают ее привлекательней и
интересней.Перед началом игры вы можете выбрать скорость, на кото-
рой  собираетесь  играть.Управление главным  героем осуществляется
клавишами курсора,  "СТР" и "влево-вверх" - пробивание стенки. Так
же  в  процессе  игры  можно  выбрать  комнату, нажав  на  клавиши
1,2,...,9,0.  В  этой игре сразу установлена бесконечная жизнь,так
что вы можете  играть  сколко вам  захочется.Но скорее вы сбросите
эту игру из своего окна вместе с компьютером.

                         DIAMOND-1, -2.

 В  игре имеется возможность  смены уровня и увеличения количества
жизней.  Уровень,с которого вы  будете играть, можно выбрать перед
началом  игры, нажав на  клавиши "Х"+"Y".  Количество жизней можно
увеличить  в самой игре,  нажав  на  клавиши "РУС/LAT"+"Z". Первая
часть  игры имеет 10 уровней, вторая  - 15. Следует так  же сказа-
ть,что жизней в игре  не может быть  больше  восьмидесяти.Если  их
станет больше, то происходит переигровка.

                           ROCKFORD.

 Наиболее удачная версия игры из серии "BOULDER DUSH". Она адапти-
рована с компьютера IBM . Игрушка отличается от других аналогичных
ей  тем,что  она  имеет  превосходную  графику,быстроту  движений,
отличный звук,  что  делает ее интересной и не надоедливой. В игре
вы управляете маленьким поваренком,который должен собрать  опреде-
ленное количество яблок на каждом уровне игры. В начале  вы имеете
пятнадцать жизней , за каждый пройденный уровень  вам прибавляется
еще одна.Дойти же до последнего уровня довольно сложно. Но  в игре
имеется возможность смены уровня. Для этого нужно  нажать  клавиши
"УС+"СС"+"РУС/LАT". При этом вам прибавится очередная жизнь  и  вы
окажитесь на следущем уровне. Но будье внимательны - уровней всего
десять. При нажатии на клавишу ВК игра переходит в  режим ожидания
и ждет пока не будут нажаты клавишы: F1 -"продолжить"/F2 -"переиг-
рать".

                             FLIGHT.

 Тип этой  игры - "стрелялка".Ваша задача - убить как можно больше
иноземных сушеств. Вы можете пополнить запас горючего,взяв бочонок
с ним. Так же в  процессе игры  по полю движется  камень, который,
задев вас, отнимает одну жизнь.За попадание в иноземное существо у
вас увеличиваются очки.Но  за  один выстрел  вычитается 2 очка. За
очередные 200 очков прибавляется жизнь.  Но основной задачей явля-
ется набор 1000 очков,  раньше,  чем вы  успеете доехать  до горы.
Иначе игра закончится.  Для этого (на первом уровне) стреляйте все
подряд, даже топливо. Но открывать огонь следует очень экономно.На
более старших уровнях топливо, наоборот, следует каждый раз брать.
Так же  не стреляйте в чудовищ,  когда  они будут совсем близко от
вас.

                             КЛАД-1.

 В  этой игре вам нужно собрать как можно больше  кладов, при этом
не попадаясь злобным  черепкам. В кладе вы можете найти  звездочку
оружие  протов черепков, а так же ключ- он дает вамм право перейти
на следущий уровень игры. Жизнь же дается только за 20000 очков, а
набрать их практически  невозможно. В начале вы имеете три  жизни.
Это довольно мало, т.к. уровней в игре двадцать, и следущий гораз-
до сложнее  предыдущего.  Чтобы увеличить число  попыток  в игре ,
нужно  в  нее  подзагрузить  Монитор.3атем  с   помощью  дерективы
А<адрес> нужно изменить содержимое ячейки 3А1 : #А3А1 <ВК> 3А1 MVI
A,F0 <ВК> 3А3 <F4>  3атем  можно  выгрузить на пленку 3-й столбик,
чтобы затем по мере надобности загрузить  его в игру через клавиши
УС+ВВОД+БЛК : О>3,1,0 <ВК> Такой способ можно использовать в любой
игре, которая не залетает при нажатии на  клавиши УС+ВВОД+БЛК, за-
тем БЛК+СБР.

                                Навалон А.В., Киров.

                     ***************
                     * E X O L O N *
                     ***************

 В ходе исследования  соседней галактики была обнаружена пригодная
для  жизни планета EXOLON  .Вскоре она была заселена, и мир долгое
время царил там. Но вот однажды связь с планетой была потеряна. На
помощь была выслана экспедиция из трех  патрульных кораблей. Приб-
лижаясь к планете, корабли неожиданно были атакованны мощным огмем
НЛО. Не успев опомниться, вы с ужасом замечаете уходящие в глубины
космоса обломки двух кораблей экспедиции. Еще находясь  в  полушо-
ке,вы даете  бортовому компьютеру команду экстренной посадки. При-
землившись  и выйдя  из коробля, вы видите, что он изрядно  разбит
вражеским огнем.Видя, что ремонт - пустая трата времени, вы,захва-
тив  немного еды,автомат  с  запасом  в  99  патронов и 10  ракет,
отправляетесь навстречу судьбе... Целью этой игры является уничто-
жение  всего,что встретится  на  вашем  пути.Уничтожать необходимо
движущихся врагов и встречающиеся на вашем пути  препятствия.Вы же
можете стрелять  в снаряды недвижущихся транспортеров,  стоящих на
дороге. Необходимо быть очень осторожным,  в радио управляемую ра-
кету не стреляйте, а уничтожте ракетой ее пульт управления. На ва-
шем пути  будут попадаться мины и  подъемники,одно прикосновение к
которым приводит  вас к гибели. Обязательно собирайте контейнеры с
боеприпасами.Во время  игры  вы увидите  телепортационные  камеры,
зайдя в одну из которых  и нажав "вверх",вы появляетесь в другой.В
одной из комнат уровня вы увидите кабину со сквозным проходом,зай-
дя в которую и нажав "вверх" вы получите новое оружие и скафандр -
в нем вам будут не страшны мины и подъемники.Всего  в игре 5 уров-
ней, каждый уровень состоит из 25 зон. Пройдя один уровень вам да-
ется возможность  заработать очки, после появления  таблицы чисел,
напротив них  начнет бегать стрелка,нажав РУС/LAT  она остановится
напротив какого-либо числа

                     Советы начинающим:
                    --------------------
1) Прыжки совершайте как можно точнее. 2) Вертикальный силовой ба-
рьер будет разрушен после продолжитель ной стрельбы. 3) Старайтесь
идти всегда по верху. 4) Не задерживайтесь долго в одной комнате -
это приведет  вас к гибели.  5)  Не старайтесь уничтожить все, так
как для вас это может плохо кончиться.

                            SABOTAGE.

 Вы-диверсант,находящийся в тылу врага.Вам было дано задание унич-
тожить  вражескую  подземную базу, заложив  бомбу цепного действия
Успешно выполнив данное вам поручение,вы дожны найти выход с базы.
Во время игры вам будут встречаться охранники,с  которыми вам при-
дется драться, а так же агрессивно настроенные  против вас собаки.
Столкновений с ними лучше избегать.Для этих и  других  целей можно
пользоваться  лифтами.Он управляется  с помощью  клавиш вверх  или
вниз. Для более быстрого прохождения игры старайтесь сначала выйти
на самый верх, затем двигаться до конца вправо, а после этого идти
все время  вправо  и  вниз. В игре  можно восстановить энергию  до
изначального уровня.В режиме "пауза" (нажать "РУС/LAT"), при нажа-
тии на  клавиши  ПС+ВК+ЗБ, ваша энергия  восстановиться до изнача-
льного уровня.

                                Шилин Д.В., Киров.


                    И Н Ф О Р М А Ц И Я


                     Таймер КР580ВИ53
                    ””””””””””””””””””

   Микросхема программируемого таймера КР580ВИ53 предназначена для
задания временных интервалов в МПС и может использоваться в следу-
ющих стандартных режимах работы: счетчик внешних событий, програм-
мируемый ждущий мультивибратор, делитель частоты, генератор меанд-
ра, программно и аппаратно запускаемый строб.
   БИС КР580ВИ53 содержит три независимых канала.  В каждом канале
есть регистр управляющего слова, шестнадцатиразрядный программиру-
емый счетчик, работающий на вычитание в двоичном или двоично-деся-
тичном коде,  двухбайтный  буферный регистр, в  который по специа-
льной команде  переписывается текущий код счетчика. Программирова-
ние каждого канала таймера сводится к следующим операциям:
  запись в регистр управляющего слова индивидуального слова управ-
ления канала;
  запись в шестнадцатиразрядный программируемый счетчик  необходи-
мого кода пересчета.
   Обратим внимание  читателя на основные особенности программиро-
вания таймера.
   1. Запись индивидуального  слова управлния канала происходит по
единому для всех каналов адресу (A0=1, A1=1). Указание конкретного
канала, к  которому относится упавляющее слово, содержится в самом
управляющем слове.
   2. Режим  обращения  к  шестнадцатиразрядному  программируемому
счетчику определяется  разрядами D4, D5 упавляющего слова.  Однако
необходимо обязательно завершить цикл обращения к счетчику полнос-
тью, т. е.  если  запрограммировано два  обращения, то однократное
обращение вызовет неправильную работу канала. Если разряды  управ-
ляющего слова D4, D5 - 0, то при записи  такого управляющего слова
содержимое шеснадцатиразрядного счетчика "защелкивается" в  буфер-
ном регистре. Таким образом, можно получать  мгновенное (в  момент
записи) значение содержимого счетчика.
   3. Oбращение к  адресам начальных счетчиков таймера как при на-
чальной загрузке, так  и  в процессе работы канала, может происхо-
дить в любой последовательности.
   4. Считывание регистра управляющего слова запрещено.
   Aдресация регистров таймера приведена в табл. 1.

Адресация регистров таймера                     Таблица 1
””””’””””’”””””””””””””””””””Ђ””””’””””’”””””””””””””””””””
 А1 ѓ A0 ѓ Название регистра Љ А1 ѓ А0 ѓ Название регистра
””””•””””•”””””””””””””””””””Ђ””””•””””•”””””””””””””””””””
  0 ѓ  0 ѓ Счетчик канала 0  Љ  1 ѓ  0 ѓ Счетчик канала 2
  0 ѓ  1 ѓ Счетчик канала 1  Љ  1 ѓ  1 ѓ Регистр управ-
    ѓ    ѓ                   Љ    ѓ    ѓ ляющего слова
””””‘””””‘”””””””””””””””””””Ђ””””‘””””‘”””””””””””””””””””

   Опишем назначение разрядов управляющего слова канала. Разряд D0
в нулевом  состоянии устаналивает режим двоичного счета,  а в еди-
ничном состоянии - режим двично-десятичного счета.
   Разряды D3, D2, D0 определяют режим работы канала. Каждый канал
может работать в одном из шести режимов (табл.2).

Кодирование режимов                             Таблица 2
””’””’””’””””’”””””””””””””””Ђ””’””’””’””””’”””””””””””””””
  ѓ  ѓ  ѓНом.ѓ   Название    Љ  ѓ  ѓ  ѓНом.ѓ   Название
D3ѓD2ѓD1ѓреж.ѓ    режима     ЉD3ѓD2ѓD1ѓреж.ѓ    режима
””•””•””•””””•”””””””””””””””Ђ””•””•””•””””•”””””””””””””””
 0ѓ 0ѓ 0ѓ  0 ѓГенерация прог-Љ Xѓ 1ѓ 1ѓ  3 ѓПрограммируемый
  ѓ  ѓ  ѓ    ѓраммир.  задер-Љ  ѓ  ѓ  ѓ    ѓделитель часто-
  ѓ  ѓ  ѓ    ѓжанного перепа-Љ  ѓ  ѓ  ѓ    ѓты выходным
  ѓ  ѓ  ѓ    ѓда  0 -> 1     Љ  ѓ  ѓ  ѓ    ѓсигналом типа
 0ѓ 0ѓ 1ѓ  1 ѓПрограммируемыйЉ  ѓ  ѓ  ѓ    ѓмеандр
  ѓ  ѓ  ѓ    ѓодновибратор   Љ 1ѓ 0ѓ 0ѓ  4 ѓПрограммно-за-
 Хѓ 1ѓ 0ѓ  2 ѓПрограммируемыйЉ  ѓ  ѓ  ѓ    ѓпускаемый за-
  ѓ  ѓ  ѓ    ѓделитель часто-Љ  ѓ  ѓ  ѓ    ѓдержан. строб
  ѓ  ѓ  ѓ    ѓты             Љ 1ѓ 0ѓ 1ѓ  5 ѓАппаратно-за-
  ѓ  ѓ  ѓ    ѓ               Љ  ѓ  ѓ  ѓ    ѓпускаемый за-
  ѓ  ѓ  ѓ    ѓ               Љ  ѓ  ѓ  ѓ    ѓдержан. строб
””‘””‘””‘””””‘”””””””””””””””Ђ””‘””‘””‘””””‘”””””””””””””””

   Разряды D5,  D4  устанавливают режимы  обращения  к  старшему и
младшему байтам счетчиков канала (табл.3).

Кодирование разрядов D5, D4                     Таблица 3
””””’””””’”””””””””””””””””””””””””””””””””””””””””””””””””
 D5 ѓ D4 ѓ                Ф у н к ц и я
””””•””””•”””””””””””””””””””””””””””””””””””””””””””””””””
  0 ѓ  0 ѓ Перепись текущего кода счетчика канала в буфер-
    ѓ    ѓ ный регистр канала
  1 ѓ  0 ѓ Обращение к старшему байту счетчика
  0 ѓ  1 ѓ Обращение к младшему байту счетчика
  1 ѓ  1 ѓ Последовательное обращение сначала к младшему,
    ѓ    ѓ затем к старшему байтам счетчика канала
””””‘””””‘”””””””””””””””””””””””””””””””””””””””””””””””””

   Разряды D7, D6  - разряды  косвенной адресации к трем регистрам
управляющего слова, т.  е. они  определяют, в какой  из  регистров
управляющего слова, какого  канала будут записаны остальные управ-
ляющие разряды D5-D0 (табл.4).
                                     Практическую  релизацию
       Tаблица 4                  операций инициализации или
Кодирование разрядов D7, D6       настройки таймера рассмот-
””””’””””’””””””Ђ””””’””””’”””””” рим  на примерах.  Во всех
    ѓ    ѓНомер Љ    ѓ    ѓНомер  примерах примем, что адрес
 D7 ѓ D6 ѓканалаЉ D7 ѓ D6 ѓканала счетчика  канала 0  равен
””””•””””•””””””Ђ””””•””””•”””””” PORT53, все остальные ад-
  0 ѓ  0 ѓ   0  Љ  1 ѓ  0 ѓ   2   реса будем  записывать  в
  0 ѓ  1 ѓ   1  Љ  1 ѓ  1 ѓ   -   виде PORT53+i, где i - но-
””””‘””””‘””””””Ђ””””‘””””‘”””””” мер канала.

   Пример 1. Подпрограмма начальной  установки канала  0 (режим 5)
имеет вид:

TIME:   MVI     A,1AH   ;Канал 0, режим 5
        OUT     PORT53+3
        MVI     A,13H
        OUT     PORT53+3
        RET

   1AH=00011010B - режим двоичного счета, режим 5, канал  0, обра-
щение к младшему байту.
   13H - число, записываемое в младший байт счетчика.
   Если в счетчик необходимо загрузить двухбайтное число 1513Н, то
подпрограмма будет выглядеть следующим образом:

TIME:   MVI     A,3AH
        OUT     PORT53+3
        MVI     A,13H
        OUT     PORT53+3
        MVI     A,15H
        OUT     PORT53
        RET

   Пример 2. Подпрограмма начальной установки таймера:

   канал 0, режим 5, в счетчик загрузить 1513Н;
   канал 1, режим 1, в счетчик загрузить 06Н;
   канал 2, режим 5, в счетчик загрузить 0ВН имеет вид:

TIME3:  MVI     A,3AH
        OUT     PORT53+3
        MVI     A,52H
        OUT     PORT53+3
        MVI     A,9AH
        OUT     PORT53+3
        MVI     A,13H
        OUT     PORT53
        MVI     A,15H
        OUT     PORT53
        MVI     A,06H
        OUT     PORT53+1
        MVI     A,0BH
        OUT     PORT53+2
        RET

   52Н=01010010В - режим двоичного счета, режим  1, канал 1, обра-
щение к младшему байту;
   9AH=10011010B - режим двоичного счета, режим 5, канал  2, обра-
щение к младшему байту.

   Иногда по текущему значению числа в счетчике канала  необходимо
принимать какое-то  решение  в  программе.  Существует два способа
считывания микропроцессором числа, содержащегося  в счетчике.  При
первом способе  на время выполнения обычной операции "Чтение счет-
чика" внешней логикой  должна быть запрещена подача синхронизирую-
щих импульсов на данный канал таймера.
   В этом случае считывание осуществляется одной или  двумя коман-
дами в зависимости от разрядов D4, D5 ранее записанного  управляю-
щего  слова. Причем  при первом  считывнии  получаем  младший байт
счетчика (D4=D5=1), при втором - старший байт счетчика.

   Пример  3. Подпрограмма  чтения содержимого  счетчика  канала 0
(D4=D5=1):

TIME4:  MVI     A,01H   ;Программное отключение
        OUT     OTKL    ;синхроимпульсов таймера
        IN      PORT53  ;Получение младшего байта
        MOV     L,A     ;счетчика
        IN      PORT53  ;Получение старшего байта
        MOV     H,A     ;счетчика
        RET

   Второй способ считывания содержимого счетчика канала не наруша-
ет выполнение счета в канале.

   Пример  4. Подпрограмма чтения содержиого счетчика канала 0 без
нарушения счета в канале:

TIME5:  MVI     A,XX00XXXXB
        OUT     PORT53+3
        IN      PORT53
        MOV     L,A
        IN      PORT53
        MOV     H,A
        RET

   XX00XXXXB - управляющее слово, записываемое в регистр управляю-
щего слова, причем D4=D5=0, а вместо Х указываются те значения би-
тов, которые были записаны при инициализации канала 0.

   (взято из книги В.Г.Майоров, А.И.Гаврилов "ПРАКТИЧЕСКИЙ
    КУРС ПРОГРАММИРОВАНИЯ МИКРОПРОЦЕССОРНЫХ СИСТЕМ")


  Генерация случайных чисел с помощью микросхемы таймера
 ””””””””””””””””””””””””””””””””””””””””””””””””””””””””

   Поскольку регистр счетчика канала таймера перезагружается снова
и снова данным числом (а в промежутках идет счет вниз до 0), выбе-
рите в качестве загружаемого в счетчик значисло, равное требуемому
диапазону случайных чисел.
   Лучше всего использовать  режим 3  канала  микросхемы  таймера.
Сначала установите для счетчика желаемый диапазон случайных чисел.
Затем, чтобы получить  из канала случайное число, надо подать  ко-
манду  командному  регистру микросхемы  таймера перенести  текущее
значение счетчика в регистр "задвижки", для чего надо сбросить би-
ты D4 и D5. Этот перенос в регистр задвижки не мешает продолжающе-
муся счету. Затем  установите  биты  D4 и  D5 командного регистра,
чтобы процессор мог  читать из  регистра задвижки. После этого две
инструкции IN дадут  сначала младший,  а затем старший байт. Нако-
нец, восстановите первоначальное значение регистра задвижки, чтобы
счет продолжался в пределах указанного диапазона времени.



                Создание звуковых эффектов
               ””””””””””””””””””””””””””””

   Звуковые эффекты обычно достигаются непрерывным изменением час-
тоты тона. Все должно  быть сконстуировано  из чистых  музыкальных
тонов, а это значит, что эффект дисторции звука должен достигаться
за счет такого быстрого изменения тона, что ухо не успевает разде-
лить тона. Например, душераздирающее "чирикание"  может быть полу-
чено при быстром переключении между одним и тем  же тоном, отстоя-
щим на несколько октав.
   При  изменении частоты всего на несколько герц  получаем вибра-
цию.
   Другой метод заключается  во вложении  плавно  меняющихся тонов
внутрь последовательности, которая сама "гуляет" по частотам вверх
и вниз. Этот метод применяется во многих играх с лабиринтами.
  100 FOR I=1 TO 10                число повторений
  110 FOR J=1 TO 6                 число разных октав
  120 PLAY "mbl64t255O=j;ba#ag#gf#feb#de#cc#dd#eff#gg#aa#b"
  130 NEXT J
  140 NEXT I
   Ассемблер кроме всего прочего  позволяет генерировать  нечистые
тона, когда интервал, в течение которого динамик включен, не равен
интервалу, в течение которого он выключен. Такое нарушение симмет-
рии может приводить к жужжащим и брякающим звукам. Когда отношение
этих  интервалов  составляет,  скажем, 50 к 1,  получаем жужжание.
Если увеличить отношение еще в 10 -  20 раз, то жужжание переходит
в отдельные брякающие звуки. Этот эффект достигается в ВЕКТОРЕ при
помощи нулевого бита порта 01H, отвечающего за вывод на МГ.
   Итак, звук можно генерировать двумя  способами: с  помощью мик-
росхемы таймера и с помощью порта 01H. Aссемблер  позволяет соеди-
нить два способа генерации звука, что создает имитацию одновремен-
ной генерации двух разных звуков. Интерференция этих двух сигналов
приводит  к сложной форме звуковой  волны. Каждый  из  двух звуков
имеет  меньшую  громкость, поэтому в результате получается  скорее
жужжание, чем два разных голоса. Этот прием реально полезен только
для создания звуковых эффектов.



             Цифровой синтез музыкальной шкалы
            ”””””””””””””””””””””””””””””””””””

   Не  вдаваясь в подпробности  строгого  математического  анализа
предложенного метода, покажем на конкретном примере его практичес-
кую  направленность. Установим коэффициенты деления делителей час-
тоты каждой ступени шкалы частот самой верхней октавы в соответст-
вии с выражением

    Kj = (10(2^(1/12))^-j,                            (1)

где j - порядковый номер ступени шкалы частот;
    n - целое число, определяющее требуемую точность форми-
        рования.

                                               Таблица 5
”””’”””””””””””””’””””””””’””””””””’”””””””””””’”””””””””””
   ѓ             ѓ        ѓ        ѓЗначения поѓНаименов.
 j ѓ(2^(1/12))^-jѓ   Kj   ѓ   fj   ѓмузыкальнойѓ  тона
   ѓ             ѓ        ѓ        ѓ шкале, Гц ѓ
”””•”””””””””””””•””””””””•””””””””•”””””””””””•”””””””””””
 1 ѓ      2      ѓ    3   ѓ   4    ѓ      5    ѓ    6
”””•”””””””””””””•””””””””•””””””””•”””””””””””•”””””””””””
 0 ѓ  1,0        ѓ  10000 ѓ 440    ѓ    440    ѓ ЛЯ   [1]
 1 ѓ  0,9438743  ѓ   9438 ѓ 466,2  ѓ           ѓ ЛЯ   [1]
 2 ѓ  0,8908987  ѓ   8908 ѓ 493,93 ѓ    494    ѓ СИ   [1]
 3 ѓ  0,8408904  ѓ   8408 ѓ 523,31 ѓ    523    ѓ ДО   [2]
 4 ѓ  0,7937011  ѓ   7937 ѓ 554,36 ѓ           ѓ ДО   [2]
 5 ѓ  0,7491540  ѓ   7491 ѓ 587,97 ѓ    588    ѓ РЕ   [2]
 6 ѓ  0,7071070  ѓ   7071 ѓ 622,25 ѓ           ѓ РЕ   [2]
 7 ѓ  0,6674204  ѓ   6674 ѓ 659,27 ѓ    660    ѓ МИ   [2]
 8 ѓ  0,6299609  ѓ   6299 ѓ 698,52 ѓ    698    ѓ ФА   [2]
 9 ѓ  0,5946038  ѓ   5946 ѓ 739,99 ѓ           ѓ ФА   [2]
10 ѓ  0,5612314  ѓ   5612 ѓ 784,03 ѓ    784    ѓ СОЛЬ [2]
11 ѓ  0,5297317  ѓ   5297 ѓ 830,65 ѓ           ѓ СОЛЬ [2]
12 ѓ  0,500000   ѓ   5000 ѓ 880    ѓ    880    ѓ ЛЯ   [2]
”””‘”””””””””””””‘””””””””‘””””””””‘”””””””””””‘”””””””””””
”””””””””””””””””””””””””””””””””””””””””””””””””””””””””””

   Частота следования импульсов на выходе j-го делителя будет рав-
на:

                 fг
    fj = ””””””””””””””””””””                          (2)
          (102^(1/12))^-j

где fг - частота на выходе высокостабильного генератора.
   В качестве опорной частоты, соответствующей j=0, примем частоту
тока  Ля  первой  октавы,  имеющую  точное целочисленное  значение
fо=440 Гц.
   Ограничивая требуемую точность  формирования четырьмя значащими
цифрами после запятой (m=4), получим (в МГц):
    fг=fо10^4=4,4.
   Значения частот ступеней второй октавы  в порядке  возростания,
вычисленные в соответствии с выражением (2), приведены в табл. 1.
   В графе 5 даны округленные значения частот музыкальных тонов.
   Частоты на октаву выше можно получить,  удваивая эти  значения,
на две октавы выше - еще раз удваивая частоты. И наоборот, частоты
на октаву ниже равны приблизительно половине этих значений (хорошо
настроенное пианино точно не следует арифметическим интервалам).



                 Микропроцессор КР580ВМ80А
               ”””””””””””””””””””””””””””””

Система команд микропроцессора КР580ВМ80А        Таблица 6
”””””””””””’””””””””””’””””””””””””””””””””’”””””””””””””””
           ѓ          ѓ       число        ѓпризнак рез-та
  команда  ѓ   код    “””””””’””””””’””””””•””’””’””’””’”””
           ѓ операции ѓбайтовѓцикловѓтактовѓ Sѓ ZѓACѓ Pѓ CY
”””””””””””•””””””””””•””””””•””””””•””””””•””•””•””•””•”””
 ACI DATA  ѓ 11001110 ѓ   2  ѓ   2  ѓ   7  ! +! +! +! +! +
 ADC R/M   ѓ 10001R/M ѓ   1  ѓ  1/2 ѓ  4/7 ! +! +! +! +! +
 ADD R/M   ѓ 10000R/M ѓ   1  ѓ  1/2 ѓ  4/7 ! +! +! +! +! +
 ADI DATA  ѓ 11000110 ѓ   2  ѓ   2  ѓ   7  ! +! +! +! +! +
 ANA R/M   ѓ 10100R/M ѓ   1  ѓ  1/2 ѓ  4/7 ! +! +! U! +! 0
 ANI DATA  ѓ 11100110 ѓ   2  ѓ   2  ѓ   7  ! +! +! U! +! 0
 CALL ADDR ѓ 11001101 ѓ   3  ѓ   5  ѓ  17  ! -! -! -! -! -
 Ccnd ADDR ѓ 11CND100 ѓ   3  ѓ  3/5 ѓ 11/17! -! -! -! -! -
 CMA       ѓ 00101111 ѓ   1  ѓ   1  ѓ   4  ! -! -! -! -! -
 CMC       ѓ 00111111 ѓ   1  ѓ   1  !   4  ! -! -! -! -! +
 CMP R/M   ѓ 10111R/M ѓ   1  ѓ  1/2 !  4/7 ! +! +! +! +! +
 CPI DATA  ѓ 11111110 ѓ   2  ѓ   2  !   7  ! +! +! +! +! +
 DAA       ѓ 00100111 ѓ   1  ѓ   1  !   4  ! +! +! +! +! +
 DAD RS    ѓ 00RS1001 ѓ   1  ѓ   3  !  10  ! -! -! -! -! +
 DCR R/M   ѓ 00R/M101 ѓ   1  ѓ  1/3 !  5/10! +! +! +! +! -
 DCX RS    ѓ 00RS1011 ѓ   1  ѓ   1  !   5  ! -! -! -! -! -
 POP RP    ѓ 11RP0001 ѓ   1  ѓ   3  !  10  ! -! -! -! -! -
 POP PSW   ѓ 11110001 ѓ   1  ѓ   3  !  10  ! +! +! +! +! +
 PUSH RP   ѓ 11RP0101 ѓ   1  ѓ   3  !  11  ! -! -! -! -! -
 RAL       ѓ 00010111 ѓ   1  ѓ   1  !   4  ! -! -! -! -! +
 RAR       ѓ 00011111 ѓ   1  ѓ   1  !   4  ! -! -! -! -! +
 RET       ѓ 11001001 ѓ   1  ѓ   3  !  10  ! -! -! -! -! -
 Rcnd      ѓ 11CND000 ѓ   1  ѓ  1/3 !  5/11! -! -! -! -! -
 RLC       ѓ 00000111 ѓ   1  ѓ   1  !   4  ! -! -! -! -! +
 RRC       ѓ 00001111 ѓ   1  ѓ   1  !   4  ! -! -! -! -! +
 RST NUM   ѓ 11NUM111 ѓ   1  ѓ   3  !  11  ! -! -! -! -! -
 SBB R/M   ѓ 10011R/M ѓ   1  ѓ  1/2 !  4/7 ! +! +! +! +! +
 SBI DATA  ѓ 11011110 ѓ   2  ѓ   2  !   7  ! +! +! +! +! +
 SHLD ADDR ѓ 00100010 ѓ   3  ѓ   5  !  16  ! -! -! -! -! -
 SPHL      ѓ 11111001 ѓ   1  ѓ   1  !   5  ! -! -! -! -! -
 STA ADDR  ѓ 00110010 ѓ   3  ѓ   4  !  13  ! -! -! -! -! -
 STAX R    ѓ 000R0010 ѓ   1  ѓ   2  !   7  ! -! -! -! -! -
 STC       ѓ 00110111 ѓ   1  ѓ   1  !   4  ! -! -! -! -! 1
 SUB R/M   ѓ 10010R/M ѓ   1  ѓ  1/2 !  4/7 ! +! +! +! +! +
 SUI DATA  ѓ 11010110 ѓ   2  ѓ   2  !   7  ! +! +! +! +! +
 XCHG      ѓ 11101011 ѓ   1  ѓ   1  !   4  ! -! -! -! -! -
 XRA R/M   ѓ 10101R/M ѓ   1  ѓ  1/2 !  4/7 ! +! +! 0! +! 0
 XRI DATA  ѓ 11101110 ѓ   2  ѓ   2  !   7  ! +! +! 0! +! 0
 XTHL      ѓ 11100011 ѓ   1  ѓ   5  !  18  ! -! -! -! -! -
 DI        ѓ 11110011 ѓ   1  ѓ   1  !   4  ! -! -! -! -! -
 EI        ѓ 11111011 ѓ   1  ѓ   1  !   4  ! -! -! -! -! -
 HLT       ѓ 01110110 ѓ   1  ѓ   1  !   7  ! -! -! -! -! -
 IN PORT   ѓ 11011011 ѓ   2  ѓ   3  !  10  ! -! -! -! -! -
 INR R/M   ѓ 00R/M100 ѓ   1  ѓ  1/3 !  5 10! +! +! +! +! -
 INX RS    ѓ 00RS0011 ѓ   1  ѓ   1  !   5  ! -! -! -! -! -
 JMP ADDR  ѓ 11000011 ѓ   3  ѓ   3  !  10  ! -! -! -! -! -
 Jcnd ADDR ѓ 11CND010 ѓ   3  ѓ   3  !  10  ! -! -! -! -! -
 LDA ADDR  ѓ 00111010 ѓ   3  ѓ   4  !  13  ! -! -! -! -! -
 LDAX R    ѓ 000R1010 ѓ   1  ѓ   2  !   7  ! -! -! -! -! -
 LHLD ADDR ѓ 00101010 ѓ   3  ѓ   5  !  16  ! -! -! -! -! -
LXI RS,DATAѓ 00RS0001 ѓ   3  ѓ   3  !  10  ! -! -! -! -! -
MOV R/M,R/Mѓ 01R/MR/M ѓ   1  ѓ  1/2 !  5/7 ! -! -! -! -! -
MVI R/M,DATѓ 00R/M110 ѓ   2  ѓ  2/3 !  7/10! -! -! -! -! -
 NOP       ѓ 00000000 ѓ   1  ѓ   1  !   4  ! -! -! -! -! -
 ORA R/M   ѓ 10110R/M ѓ   1  ѓ  1/2 !  4/7 ! +! +! 0! +! 0
 ORI DATA  ѓ 11110110 ѓ   2  ѓ   2  !   7  ! +! +! 0! +! 0
 OUT PORT  ѓ 11010011 ѓ   2  ѓ   3  !  10  ! -! -! -! -! -
 PCHL      ѓ 11101001 ѓ   1  ѓ   1  !   5  ! -! -! -! -! -
”””””””””””‘””””””””””‘””””””‘”””””””””””””””””””””””””””””
Примечания:

Ccnd обозначает группу команд CNZ,CZ,CNC,CC,CPO,CPE,CP,CM
Rcnd обозначает группу команд RNZ,RZ,RNC,RC,RPO,RPE,RP,RM
Jcnd обозначает группу команд JNZ,JZ,JNC,JC,JPO,JPE,JP,JM

 Состояние  признака результата указывается следующим образом: "+"
-  признак устанавливается в 1  или 0 в зависимости  от результата
выполнения команды; "-" -  признак не  изменяется;  U  признак  не
определен.

 В команде MOV R/M,R/M первый  и второй операнды не должны опреде-
лять имя ячейки памяти одновременно.
 
